// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html
/* Copyright (c) 2020 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: Apache-2.0
 */

// /{
//     vdd_pwr: vdd-pwr-ctrl {
// 		compatible = "regulator-fixed";
// 		regulator-name = "vdd-pwr-ctrl";
// 		enable-gpios = <&gpio0 30 GPIO_ACTIVE_HIGH>;
// 		regulator-boot-on;
// 		startup-delay-us = <1000>;
// 	};
// };

&pinctrl {
	i2c0_default: i2c0_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 7)>,
				<NRF_PSEL(TWIM_SCL, 0, 8)>;
		};
	};
};

&i2c0{
	   status="okay"; 
       sx1509b: sx1509b@20 {
		compatible = "semtech,sx1509b";
		reg = <0x20>;
		// vin-supply = <&vdd_pwr>;
		gpio-controller;
		#gpio-cells = <2>;
		ngpios = <16>;
		/* Active-low LEDs init high, all else init low */
		init-out-high = <0xe0e0>;
		init-out-low = <0x1f1f>;
	};
};

 &sx1509b {
	status = "okay";
	nint-gpios = < &gpio1 8 (GPIO_PULL_UP | GPIO_ACTIVE_LOW) >;
};

&spi1_default {
    group1 {
        psels = <NRF_PSEL(SPIM_SCK, 0, 31)>;
    };
};

&spi1_sleep {
    group1 {
        psels = <NRF_PSEL(SPIM_SCK, 0, 31)>;
    };
};
